<!-- Views/DashboardView.axaml -->
<UserControl
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vms="clr-namespace:KeyCard.Desktop.ViewModels"
    xmlns:vctrl="clr-namespace:KeyCard.Desktop.Views.Controls"
    xmlns:conv="clr-namespace:KeyCard.Desktop.Converters"
    x:Class="KeyCard.Desktop.Views.DashboardView"
    x:DataType="vms:DashboardViewModel">

  <!-- Local converter instances -->
  <UserControl.Resources>
    <conv:BoolNotConverter x:Key="BoolNot"/>
    <conv:StringHasTextConverter x:Key="HasText"/>
    <conv:StatusBrushConverter x:Key="StatusBrushConverter"/>
  </UserControl.Resources>

  <!-- Keyboard shortcuts -->
  <UserControl.KeyBindings>
    <!-- F5 triggers refresh -->
    <KeyBinding Gesture="F5" Command="{Binding RefreshCommand}"/>
  </UserControl.KeyBindings>

  <Grid RowDefinitions="Auto,Auto,*" Margin="8">
    <!-- Header -->
    <vctrl:ViewHeader Grid.Row="0"
                      HeaderText="Dashboard Overview"
                      SubHeaderText="{Binding CurrentUserDisplay}" />

    <!-- Toolbar -->
    <Border Grid.Row="1" Margin="8,8,8,0" CornerRadius="10"
            BorderBrush="#3F2F73" BorderThickness="1" Padding="12">
      <!-- Make the left section stretch, keep filter and refresh on right -->
      <Grid ColumnDefinitions="*,12,Auto,12,Auto">
        <!-- Stretching primary buttons (fill available space) -->
        <Grid Grid.Column="0" ColumnDefinitions="*,8,*" VerticalAlignment="Center">
          <Button Grid.Column="0"
                  Content="ðŸ“‹ Front Desk"
                  Command="{Binding GoFrontDeskCommand}"
                  MinHeight="36"
                  HorizontalAlignment="Stretch"/>
          <Button Grid.Column="2"
                  Content="ðŸ§¹ Housekeeping"
                  Command="{Binding GoHousekeepingCommand}"
                  MinHeight="36"
                  HorizontalAlignment="Stretch"/>
        </Grid>

        <!-- Search -->
        <StackPanel Grid.Column="2"
                    Orientation="Horizontal"
                    Spacing="8"
                    VerticalAlignment="Center">
          <TextBlock Text="Filter:" VerticalAlignment="Center" Foreground="#CFCFEA" />
          <TextBox x:Name="SearchBox"
                   Width="240"
                   Watermark="Search by name, booking, or room"
                   Text="{Binding SearchText}" />
          <Button Content="Search" Command="{Binding SearchCommand}"/>
        </StackPanel>

        <!-- Refresh + spinner + 'Synced' blip -->
        <StackPanel Grid.Column="4"
                    Orientation="Horizontal"
                    Spacing="10"
                    VerticalAlignment="Center">
          <Button x:Name="RefreshBtn"
                  Content="â†» Refresh"
                  Command="{Binding RefreshCommand}"
                  IsEnabled="{Binding IsRefreshing, Converter={StaticResource BoolNot}}"/>
          <ProgressBar IsIndeterminate="True"
                       IsVisible="{Binding IsRefreshing}"
                       Width="100"/>
          <TextBlock x:Name="SyncBlip"
                     Text="{Binding SyncMessage}"
                     Opacity="0.9"
                     IsVisible="{Binding SyncMessage, Converter={StaticResource HasText}}"/>
        </StackPanel>
      </Grid>
    </Border>

    <!-- Main content -->
    <Border Grid.Row="2"
            CornerRadius="10"
            BorderBrush="#3F2F73"
            BorderThickness="1"
            Padding="12"
            Margin="8">
      <Grid RowDefinitions="Auto,*">
        <StackPanel Orientation="Horizontal" Spacing="8" Margin="0,0,0,8">
          <TextBlock Text="Today's Arrivals"
                     FontWeight="SemiBold"
                     FontSize="16"
                     Foreground="#E8E8F0" />
          <TextBlock Text="{Binding FilteredArrivals.Count, StringFormat='({0})'}"
                     FontSize="16"
                     Opacity="0.7"
                     VerticalAlignment="Center"/>
        </StackPanel>

        <Border Grid.Row="1"
                Background="#141419"
                BorderBrush="#4B3A86"
                BorderThickness="1"
                CornerRadius="8"
                Padding="6">
          <DataGrid
              ItemsSource="{Binding FilteredArrivals}"
              AutoGenerateColumns="False"
              HeadersVisibility="Column"
              GridLinesVisibility="All"
              CanUserSortColumns="True"
              CanUserResizeColumns="True"
              CanUserReorderColumns="True"
              IsReadOnly="True"
              RowHeight="36"
              Background="#141419">

            <DataGrid.Columns>
              <DataGridTextColumn Header="Booking ID"
                                  Width="2*"
                                  Binding="{Binding BookingId}"
                                  SortMemberPath="BookingId"/>
              <DataGridTextColumn Header="Confirmation"
                                  Width="*"
                                  Binding="{Binding ConfirmationCode}"
                                  SortMemberPath="ConfirmationCode"/>
              <DataGridTextColumn Header="Guest"
                                  Width="2*"
                                  Binding="{Binding GuestName}"
                                  SortMemberPath="GuestName"/>
              <DataGridTextColumn Header="Room"
                                  Width="*"
                                  Binding="{Binding RoomNumber}"
                                  SortMemberPath="RoomNumber"/>
              <DataGridTextColumn Header="Check-In"
                                  Width="*"
                                  Binding="{Binding CheckIn, StringFormat='{}{0:MMM d}'}"
                                  SortMemberPath="CheckIn"/>
              <DataGridTextColumn Header="Check-Out"
                                  Width="*"
                                  Binding="{Binding CheckOut, StringFormat='{}{0:MMM d}'}"
                                  SortMemberPath="CheckOut"/>
              <!-- Color badge for status -->
              <DataGridTemplateColumn Header="Status" Width="*">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <Border CornerRadius="12"
                            Padding="6,2"
                            HorizontalAlignment="Center"
                            Background="{Binding Status, Converter={StaticResource StatusBrushConverter}, ConverterParameter=bg}">
                      <TextBlock Text="{Binding Status}"
                                 FontSize="12"
                                 Foreground="{Binding Status, Converter={StaticResource StatusBrushConverter}, ConverterParameter=fg}"/>
                    </Border>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
            </DataGrid.Columns>
          </DataGrid>
        </Border>
      </Grid>
    </Border>
  </Grid>
</UserControl>
