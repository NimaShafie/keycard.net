services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - prod-dbdata:/var/lib/postgresql/data
    networks: [backing]

  cache:
    image: redis:7
    networks: [backing]

  api:
    image: ghcr.io/yourorg/hotel-api:latest
    environment:
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__Default: Host=db;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      Redis__ConnectionString: ${REDIS_CONNECTION}
      Jwt__Issuer: ${JWT_ISSUER}
      Jwt__Audience: ${JWT_AUDIENCE}
      Jwt__SigningKey: ${JWT_SIGNING_KEY}
      RunMigrations: "true"
    depends_on: [db, cache]
    networks: [backing]
    expose: ["8080"]

  web:
    image: ghcr.io/yourorg/hotel-web:latest
    environment:
      ASPNETCORE_URLS: http://+:8081
      ApiBaseUrl: http://api:8080
      PublicBaseUrl: https://hotel.example.com
    depends_on: [api]
    networks: [backing]
    expose: ["8081"]

  proxy:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-enabled/:/etc/nginx/conf.d:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro   # host-mounted certs
    depends_on: [web, api]
    ports:
      - "80:80"
      - "443:443"
    networks: [backing, public]

networks:
  backing:
  public:

volumes:
  prod-dbdata:
