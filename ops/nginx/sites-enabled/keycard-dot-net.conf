server {
  listen 80;
  server_name hotel.example.com api.hotel.example.com;
  location /.well-known/acme-challenge/ { root /var/www/certbot; }
  location / { return 301 https://$host$request_uri; }
}

server {
  listen 443 ssl http2;
  server_name hotel.example.com;

  ssl_certificate     /etc/letsencrypt/live/hotel.example.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/hotel.example.com/privkey.pem;

  location / {
    proxy_pass         http://web:8081;
    proxy_set_header   Host $host;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_read_timeout 120s;
    proxy_buffering    off;
  }
}

server {
  listen 443 ssl http2;
  server_name api.hotel.example.com;

  ssl_certificate     /etc/letsencrypt/live/api.hotel.example.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/api.hotel.example.com/privkey.pem;

  location /hub/ {                 # SignalR long polling/websockets
    proxy_pass         http://api:8080/hub/;
    proxy_http_version 1.1;
    proxy_set_header   Upgrade $http_upgrade;
    proxy_set_header   Connection "Upgrade";
    proxy_set_header   Host $host;
    proxy_set_header   X-Forwarded-Proto $scheme;
  }

  location / {
    proxy_pass         http://api:8080;
    proxy_set_header   Host $host;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
